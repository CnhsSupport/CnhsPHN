<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Cantiasay Peer Health Support</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #f5f7fa;
      margin: 0;
      padding: 0;
    }
    header {
      background: #2d89ef;
      color: white;
      padding: 20px;
      text-align: center;
    }
    .container {
      max-width: 800px;
      margin: auto;
      padding: 20px;
      background: white;
      border-radius: 10px;
    }
    .login-section,
    .chat-section,
    .admin-panel {
      margin-bottom: 30px;
    }
    textarea,
    input,
    select {
      width: 100%;
      padding: 10px;
      margin: 10px 0;
      border-radius: 5px;
      border: 1px solid #ccc;
      box-sizing: border-box;
    }
    button {
      padding: 10px 15px;
      background: #2d89ef;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      font-weight: bold;
    }
    .chat-box {
      border: 1px solid #ddd;
      border-radius: 5px;
      height: 250px;
      overflow-y: auto;
      padding: 10px;
      background: #fafafa;
      margin-bottom: 10px;
      white-space: pre-wrap;
    }
    .message {
      margin-bottom: 10px;
      padding: 8px;
      border-radius: 8px;
      background: #eef3fc;
    }
    .message.admin {
      background: #d3e8d3;
      font-style: italic;
    }
    .info-block {
      margin-top: 20px;
    }
    .info-block button {
      background-color: #eef3fc;
      color: #2d89ef;
      font-weight: bold;
      border: 1px solid #bcd4f6;
      width: 100%;
      text-align: left;
      padding: 10px;
      cursor: pointer;
      border-radius: 5px;
    }
    .hidden {
      display: none;
      margin-top: 10px;
      border-left: 3px solid #2d89ef;
      padding-left: 10px;
      background: #f9fbfe;
      border-radius: 0 5px 5px 0;
    }
  </style>

  <!-- Firebase SDK -->
  <script src="https://www.gstatic.com/firebasejs/9.23.0/firebase-app.js"></script>
  <script src="https://www.gstatic.com/firebasejs/9.23.0/firebase-firestore.js"></script>

  <script>
    // Your Firebase config
    const firebaseConfig = {
      apiKey: "AIzaSyCC38qVQII4_ZvCYQlBdLIhW7Cmez-cI18",
      authDomain: "cantiasayhealthsupport.firebaseapp.com",
      projectId: "cantiasayhealthsupport",
      storageBucket: "cantiasayhealthsupport.firebasestorage.app",
      messagingSenderId: "70362977786",
      appId: "1:70362977786:web:f0620f6fdf3126e37f0043"
    };

    // Initialize Firebase
    const app = firebase.initializeApp(firebaseConfig);
    const db = firebase.firestore();
  </script>
</head>
<body>
  <header>
    <h1>Cantiasay Peer Health Navigators</h1>
    <p>Confidential Chat & Health Education for Cantiasay Island Students</p>
  </header>

  <div class="container">
    <!-- Login Section -->
    <div class="login-section" id="loginSection">
      <h2>Login</h2>
      <input id="username" placeholder="Enter your username" />
      <button onclick="login()">Login</button>
    </div>

    <!-- User Chat Section -->
    <div id="chatUI" class="chat-section" style="display:none">
      <h2>üì® Chat with Peer Health Navigator</h2>
      <div id="chatBox" class="chat-box"></div>
      <textarea id="userInput" placeholder="Type your message..."></textarea>
      <button onclick="sendMessage()">Send</button>
    </div>

    <!-- Admin Panel -->
    <div id="adminUI" class="admin-panel" style="display:none">
      <h2>üõ† Admin Panel: Messages from All Users</h2>
      <select id="userList" onchange="loadUserMessages()"></select>
      <div id="adminChatBox" class="chat-box"></div>
      <textarea id="adminReply" placeholder="Reply to this user..."></textarea>
      <button onclick="sendAdminReply()">Send Reply</button>
    </div>

    <!-- Health Education Info -->
    <section class="health-info">
      <h2>üìö Health Education Highlights</h2>

      <div class="info-block">
        <button onclick="toggleInfo(this)">Learning about your body and feelings</button>
        <div class="hidden">
          <p>Let‚Äôs be honest ‚Äî puberty and all those changes can get super weird and confusing. That‚Äôs why sex education is actually really helpful (even if it makes you giggle a little in class). It helps you understand what‚Äôs going on with your body, how to respect other people‚Äôs boundaries, and how to make smart choices without feeling clueless. Dr. Monica Rodriguez, who literally works with young people and studies this stuff, said that sex ed gives teens the tools to make better decisions about their health. So yeah, it‚Äôs not just boring info ‚Äî it‚Äôs stuff that helps you feel more in control and less like you're stuck guessing everything.</p>
        </div>
      </div>

      <div class="info-block">
        <button onclick="toggleInfo(this)">You are more than your sexual activity</button>
        <div class="hidden">
          <p>One of the most important things to remember is that your worth isn‚Äôt defined by whether you‚Äôre sexually active or not. People often tie self-esteem to sexual experiences, but Dr. Rodriguez reminds us that your value is about who you are as a whole person ‚Äî your kindness, dreams, and talents. Everyone‚Äôs journey is different and valid, and respecting your own pace is a big part of healthy growth.</p>
        </div>
      </div>

      <div class="info-block">
        <button onclick="toggleInfo(this)">Access to contraception and privacy</button>
        <div class="hidden">
          <p>Sometimes, getting birth control or other sexual health resources feels scary or complicated ‚Äî especially on a small island where everyone knows everyone. But it‚Äôs your right to access contraception confidentially to protect your health. Local health centers and peer navigators are here to help, and they‚Äôll keep your information private. Taking charge of your reproductive health is a smart and responsible choice, and you should never feel ashamed for seeking help.</p>
        </div>
      </div>

      <div class="info-block">
        <button onclick="toggleInfo(this)">Respecting boundaries and consent</button>
        <div class="hidden">
          <p>Consent isn‚Äôt just a buzzword ‚Äî it‚Äôs the foundation of any respectful relationship. Always make sure everyone involved feels comfortable and says ‚Äúyes‚Äù without pressure. If someone says no or seems unsure, respect that fully. Healthy communication builds trust and safety, which makes relationships way better and less stressful.</p>
        </div>
      </div>

      <div class="info-block">
        <button onclick="toggleInfo(this)">Where to get support on Cantiasay Island</button>
        <div class="hidden">
          <p>If you ever feel overwhelmed or need advice, don‚Äôt hesitate to reach out to Cantiasay Peer Health Navigators. We provide anonymous, non-judgmental support. You can chat here or visit local clinics that respect your privacy and health rights. Remember, you are never alone and there are people ready to listen and help.</p>
        </div>
      </div>
    </section>
  </div>

  <script>
    let currentUser = "";

    async function login() {
      const usernameInput = document.getElementById("username");
      const username = usernameInput.value.trim();
      if (!username) {
        alert("Please enter a username.");
        return;
      }

      currentUser = username;
      document.getElementById("loginSection").style.display = "none";

      if (username === "cantiasayhealth317702") {
        document.getElementById("adminUI").style.display = "block";
        await loadUserList();
      } else {
        document.getElementById("chatUI").style.display = "block";
        loadMessages();
        setupRealtimeListener();
      }
    }

    async function sendMessage() {
      const input = document.getElementById("userInput");
      const text = input.value.trim();
      if (!text) return;

      input.value = "";

      // Add message to Firestore
      await db.collection("messages").add({
        sender: currentUser,
        text: text,
        timestamp: firebase.firestore.FieldValue.serverTimestamp()
      });
    }

    async function loadMessages() {
      const chatBox = document.getElementById("chatBox");
      chatBox.innerHTML = "Loading messages...";

      // Get last 50 messages from this user
      const querySnapshot = await db.collection("messages")
        .where("sender", "==", currentUser)
        .orderBy("timestamp", "desc")
        .limit(50)
        .get();

      const messages = [];
      querySnapshot.forEach(doc => {
        messages.push(doc.data());
      });

      // Show in ascending order (oldest first)
      messages.reverse();

      chatBox.innerHTML = messages.map(m => {
        const timeStr = m.timestamp ? new Date(m.timestamp.toDate()).toLocaleString() : "";
        return `<div class="message"><strong>${m.sender}</strong> [${timeStr}]:<br>${escapeHtml(m.text)}</div>`;
      }).join("");

      chatBox.scrollTop = chatBox.scrollHeight;
    }

    // Real-time listener to update chat UI when new messages arrive
    function setupRealtimeListener() {
      db.collection("messages")
        .where("sender", "==", currentUser)
        .orderBy("timestamp", "desc")
        .limit(50)
        .onSnapshot(snapshot => {
          const chatBox = document.getElementById("chatBox");
          const messages = [];
          snapshot.forEach(doc => {
            messages.push(doc.data());
          });
          messages.reverse();

          chatBox.innerHTML = messages.map(m => {
            const timeStr = m.timestamp ? new Date(m.timestamp.toDate()).toLocaleString() : "";
            return `<div class="message"><strong>${m.sender}</strong> [${timeStr}]:<br>${escapeHtml(m.text)}</div>`;
          }).join("");
          chatBox.scrollTop = chatBox.scrollHeight;
        });
    }

    // ADMIN FUNCTIONS

    async function loadUserList() {
      const userList = document.getElementById("userList");
      userList.innerHTML = "";

      // Get distinct users from messages collection
      const usersSnapshot = await db.collection("messages").get();

      const usersSet = new Set();
      usersSnapshot.forEach(doc => {
        usersSet.add(doc.data().sender);
      });

      usersSet.delete("cantiasayhealth317702"); // Remove admin username

      // Add users to dropdown
      usersSet.forEach(user => {
        const option = document.createElement("option");
        option.value = user;
        option.textContent = user;
        userList.appendChild(option);
      });

      if (userList.options.length > 0) {
        userList.selectedIndex = 0;
        loadUserMessages();
      }
    }

    async function loadUserMessages() {
      const selectedUser = document.getElementById("userList").value;
      if (!selectedUser) return;

      const adminChatBox = document.getElementById("adminChatBox");
      adminChatBox.innerHTML = "Loading messages...";

      // Get all messages by selected user and admin replies to that user
      const querySnapshot = await db.collection("messages")
        .where("sender", "in", [selectedUser, "Cantiasay Navigator"])
        .orderBy("timestamp", "asc")
        .get();

      const messages = [];
      querySnapshot.forEach(doc => {
        messages.push(doc.data());
      });

      adminChatBox.innerHTML = messages.map(m => {
        const timeStr = m.timestamp ? new Date(m.timestamp.toDate()).toLocaleString() : "";
        const isAdmin = m.sender === "Cantiasay Navigator";
        return `<div class="message${isAdmin ? " admin" : ""}"><strong>${m.sender}</strong> [${timeStr}]:<br>${escapeHtml(m.text)}</div>`;
      }).join("");
      adminChatBox.scrollTop = adminChatBox.scrollHeight;
    }

    async function sendAdminReply() {
      const replyInput = document.getElementById("adminReply");
      const text = replyInput.value.trim();
      const selectedUser = document.getElementById("userList").value;
      if (!text || !selectedUser) return alert("Please select a user and enter a reply.");

      replyInput.value = "";

      await db.collection("messages").add({
        sender: "Cantiasay Navigator",
        text: text,
        timestamp: firebase.firestore.FieldValue.serverTimestamp(),
        toUser: selectedUser
      });

      loadUserMessages();
    }

    // Toggle show/hide info blocks
    function toggleInfo(btn) {
      const info = btn.nextElementSibling;
      if (info.style.display === "block") {
        info.style.display = "none";
      } else {
        info.style.display = "block";
      }
    }

    // Escape HTML to prevent injection
    function escapeHtml(text) {
      return text
        .replace(/&/g, "&amp;")
        .replace(/</g, "&lt;")
        .replace(/>/g, "&gt;")
        .replace(/"/g, "&quot;")
        .replace(/'/g, "&#039;");
    }
  </script>
</body>
</html>
